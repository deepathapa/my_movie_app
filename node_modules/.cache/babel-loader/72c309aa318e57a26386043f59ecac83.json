{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movieapp\\\\moviewebsite\\\\src\\\\context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URl = `https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`;\nconst API_SEARCH = `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_API_KEY}`;\nexport const API_ID = `https://api.themoviedb.org/3/movie/{movie_id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`;\nconst AppContext = /*#__PURE__*/React.createContext(); // we need to create a provider fun\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(true);\n  const [movie, setMovie] = useState([]);\n  const [isError, setIsError] = useState({\n    show: \"false\",\n    msg: \"\"\n  });\n\n  const getMovies = async url => {\n    setIsLoading(true);\n\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data.results);\n\n      if (data.results.length > 0) {\n        setIsLoading(false);\n        setMovie(data.results);\n      } else {\n        setIsError({\n          show: true,\n          msg: data.Error\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getMovies(API_URl);\n  }, []);\n\n  const onSearch = query => {\n    getMovies(`${API_SEARCH}&query=${query}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      isLoading,\n      isError,\n      movie,\n      onSearch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 11\n  }, this);\n}; //Global custom hooks\n\n\n_s(AppProvider, \"yCrTbqyfJ5Dpz1bNYWg6Vo5ODSs=\");\n\n_c = AppProvider;\n\nconst useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider, useGlobalContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useContext","useEffect","useState","API_URl","process","env","REACT_APP_API_KEY","API_SEARCH","API_ID","AppContext","createContext","AppProvider","children","isLoading","setIsLoading","movie","setMovie","isError","setIsError","show","msg","getMovies","url","res","fetch","data","json","console","log","results","length","Error","error","onSearch","query","useGlobalContext"],"sources":["D:/Movieapp/moviewebsite/src/context.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nconst API_URl = `https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`;\r\n\r\nconst API_SEARCH = `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_API_KEY}`;\r\n\r\nexport const API_ID = `https://api.themoviedb.org/3/movie/{movie_id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`;\r\nconst AppContext = React.createContext();\r\n// we need to create a provider fun\r\nconst AppProvider = ({ children }) => {\r\n     const [isLoading, setIsLoading] = useState(true);\r\n     const [movie, setMovie] = useState([]);\r\n     const [isError, setIsError] = useState({ show: \"false\", msg: \"\" });\r\n\r\n     const getMovies = async (url) => {\r\n          setIsLoading(true);\r\n          try {\r\n               const res = await fetch(url);\r\n               const data = await res.json();\r\n               console.log(data.results);\r\n               if (data.results.length > 0) {\r\n                    setIsLoading(false);\r\n                    setMovie(data.results);\r\n               } else {\r\n                    setIsError({\r\n                         show: true,\r\n                         msg: data.Error,\r\n                    });\r\n               }\r\n          } catch (error) {\r\n               console.log(error);\r\n          }\r\n     };\r\n     useEffect(() => {\r\n          getMovies(API_URl);\r\n     }, []);\r\n\r\n     const onSearch = (query) => {\r\n          getMovies(`${API_SEARCH}&query=${query}`);\r\n     };\r\n\r\n     return (\r\n          <AppContext.Provider value={{ isLoading, isError, movie, onSearch }}>\r\n               {children}\r\n          </AppContext.Provider>\r\n     );\r\n};\r\n\r\n//Global custom hooks\r\nconst useGlobalContext = () => {\r\n     return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider, useGlobalContext };\r\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;;AACA,MAAMC,OAAO,GAAI,sDAAqDC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,wBAApG;AAEA,MAAMC,UAAU,GAAI,qDAAoDH,OAAO,CAACC,GAAR,CAAYC,iBAAkB,EAAtG;AAEA,OAAO,MAAME,MAAM,GAAI,yDAAwDJ,OAAO,CAACC,GAAR,CAAYC,iBAAkB,iBAAtG;AACP,MAAMG,UAAU,gBAAGV,KAAK,CAACW,aAAN,EAAnB,C,CACA;;AACA,MAAMC,WAAW,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACjC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC;IAAEiB,IAAI,EAAE,OAAR;IAAiBC,GAAG,EAAE;EAAtB,CAAD,CAAtC;;EAEA,MAAMC,SAAS,GAAG,MAAOC,GAAP,IAAe;IAC5BR,YAAY,CAAC,IAAD,CAAZ;;IACA,IAAI;MACC,MAAMS,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;MACA,MAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;MACAC,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,OAAjB;;MACA,IAAIJ,IAAI,CAACI,OAAL,CAAaC,MAAb,GAAsB,CAA1B,EAA6B;QACxBhB,YAAY,CAAC,KAAD,CAAZ;QACAE,QAAQ,CAACS,IAAI,CAACI,OAAN,CAAR;MACJ,CAHD,MAGO;QACFX,UAAU,CAAC;UACNC,IAAI,EAAE,IADA;UAENC,GAAG,EAAEK,IAAI,CAACM;QAFJ,CAAD,CAAV;MAIJ;IACL,CAbD,CAaE,OAAOC,KAAP,EAAc;MACXL,OAAO,CAACC,GAAR,CAAYI,KAAZ;IACJ;EACL,CAlBD;;EAmBA/B,SAAS,CAAC,MAAM;IACXoB,SAAS,CAAClB,OAAD,CAAT;EACJ,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAM8B,QAAQ,GAAIC,KAAD,IAAW;IACvBb,SAAS,CAAE,GAAEd,UAAW,UAAS2B,KAAM,EAA9B,CAAT;EACJ,CAFD;;EAIA,oBACK,QAAC,UAAD,CAAY,QAAZ;IAAqB,KAAK,EAAE;MAAErB,SAAF;MAAaI,OAAb;MAAsBF,KAAtB;MAA6BkB;IAA7B,CAA5B;IAAA,UACMrB;EADN;IAAA;IAAA;IAAA;EAAA,QADL;AAKJ,CArCD,C,CAuCA;;;GAvCMD,W;;KAAAA,W;;AAwCN,MAAMwB,gBAAgB,GAAG,MAAM;EAAA;;EAC1B,OAAOnC,UAAU,CAACS,UAAD,CAAjB;AACJ,CAFD;;IAAM0B,gB;;AAIN,SAAS1B,UAAT,EAAqBE,WAArB,EAAkCwB,gBAAlC"},"metadata":{},"sourceType":"module"}