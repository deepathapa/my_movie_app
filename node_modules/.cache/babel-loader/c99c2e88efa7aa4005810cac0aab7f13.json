{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movieapp\\\\moviewebsite\\\\src\\\\Movies.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useGlobalContext } from \"./context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const {\n    movie,\n    isLoading\n  } = useGlobalContext();\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading.....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"movie-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container grid grid-4-col\",\n      children: movie.slice(0, 6).map(curMovie => {\n        var {\n          id,\n          title,\n          poster_path\n        } = curMovie;\n        const movieName = title.substring(0, 15);\n        return /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `movie/${id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: movieName.length >= 15 ? `${movieName} ...` : movieName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://image.tmdb.org/t/p/w500//${poster_path}`,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 36\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 31\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Movies, \"oUNllctDIfH/AWN4b122Qvgl7vI=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","NavLink","useGlobalContext","Movies","movie","isLoading","slice","map","curMovie","id","title","poster_path","movieName","substring","length"],"sources":["D:/Movieapp/moviewebsite/src/Movies.js"],"sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useGlobalContext } from \"./context\";\r\n\r\nconst Movies = () => {\r\n     const { movie, isLoading } = useGlobalContext();\r\n\r\n     if (isLoading) {\r\n          return (\r\n               <>\r\n                    <div className='loading'>Loading.....</div>\r\n               </>\r\n          );\r\n     }\r\n     return (\r\n          <section className='movie-page'>\r\n               <div className='container grid grid-4-col'>\r\n                    {movie.slice(0, 6).map((curMovie) => {\r\n                         var { id, title, poster_path } = curMovie;\r\n\r\n                         const movieName = title.substring(0, 15);\r\n                         return (\r\n                              <NavLink to={`movie/${id}`} key={id}>\r\n                                   <div className='card'>\r\n                                        <div className='card-info'>\r\n                                             <h2>\r\n                                                  {movieName.length >= 15\r\n                                                       ? `${movieName} ...`\r\n                                                       : movieName}\r\n                                             </h2>\r\n                                             <img\r\n                                                  src={`https://image.tmdb.org/t/p/w500//${poster_path}`}\r\n                                                  alt=''\r\n                                             />\r\n                                        </div>\r\n                                   </div>\r\n                              </NavLink>\r\n                         );\r\n                    })}\r\n               </div>\r\n          </section>\r\n     );\r\n};\r\n\r\nexport default Movies;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,gBAAT,QAAiC,WAAjC;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EAChB,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAuBH,gBAAgB,EAA7C;;EAEA,IAAIG,SAAJ,EAAe;IACV,oBACK;MAAA,uBACK;QAAK,SAAS,EAAC,SAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADL,iBADL;EAKJ;;EACD,oBACK;IAAS,SAAS,EAAC,YAAnB;IAAA,uBACK;MAAK,SAAS,EAAC,2BAAf;MAAA,UACMD,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAe,CAAf,EAAkBC,GAAlB,CAAuBC,QAAD,IAAc;QAChC,IAAI;UAAEC,EAAF;UAAMC,KAAN;UAAaC;QAAb,IAA6BH,QAAjC;QAEA,MAAMI,SAAS,GAAGF,KAAK,CAACG,SAAN,CAAgB,CAAhB,EAAmB,EAAnB,CAAlB;QACA,oBACK,QAAC,OAAD;UAAS,EAAE,EAAG,SAAQJ,EAAG,EAAzB;UAAA,uBACK;YAAK,SAAS,EAAC,MAAf;YAAA,uBACK;cAAK,SAAS,EAAC,WAAf;cAAA,wBACK;gBAAA,UACMG,SAAS,CAACE,MAAV,IAAoB,EAApB,GACO,GAAEF,SAAU,MADnB,GAEMA;cAHZ;gBAAA;gBAAA;gBAAA;cAAA,QADL,eAMK;gBACK,GAAG,EAAG,oCAAmCD,WAAY,EAD1D;gBAEK,GAAG,EAAC;cAFT;gBAAA;gBAAA;gBAAA;cAAA,QANL;YAAA;cAAA;cAAA;cAAA;YAAA;UADL;YAAA;YAAA;YAAA;UAAA;QADL,GAAiCF,EAAjC;UAAA;UAAA;UAAA;QAAA,QADL;MAiBJ,CArBA;IADN;MAAA;MAAA;MAAA;IAAA;EADL;IAAA;IAAA;IAAA;EAAA,QADL;AA4BJ,CAtCD;;GAAMN,M;UAC4BD,gB;;;KAD5BC,M;AAwCN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}