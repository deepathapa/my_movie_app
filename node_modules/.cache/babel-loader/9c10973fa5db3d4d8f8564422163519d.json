{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movieapp\\\\moviewebsite\\\\src\\\\context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URl = `https://api.themoviedb.org/3/movie/550?api_key=39e2b9f80d790938eaae0309db6f5a5a`;\nconst AppContext = /*#__PURE__*/React.createContext(); // we need to create a provider fun\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(true);\n\n  const getMovies = async url => {\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getMovies(API_URl);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: \"thapa\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this);\n}; //Global custom hooks\n\n\n_s(AppProvider, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");\n\n_c = AppProvider;\n\nconst useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider, useGlobalContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useContext","useEffect","API_URl","AppContext","createContext","AppProvider","children","isLoading","setIsLoading","useState","getMovies","url","res","fetch","data","json","console","log","error","useGlobalContext"],"sources":["D:/Movieapp/moviewebsite/src/context.js"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\n\r\nconst API_URl = `https://api.themoviedb.org/3/movie/550?api_key=39e2b9f80d790938eaae0309db6f5a5a`;\r\nconst AppContext = React.createContext();\r\n// we need to create a provider fun\r\nconst AppProvider = ({ children }) => {\r\n     const [isLoading, setIsLoading] = useState(true);\r\n     const getMovies = async (url) => {\r\n          try {\r\n               const res = await fetch(url);\r\n               const data = await res.json();\r\n               console.log(data);\r\n          } catch (error) {\r\n               console.log(error);\r\n          }\r\n     };\r\n     useEffect(() => {\r\n          getMovies(API_URl);\r\n     }, []);\r\n\r\n     return <AppContext.Provider value='thapa'>{children}</AppContext.Provider>;\r\n};\r\n\r\n//Global custom hooks\r\nconst useGlobalContext = () => {\r\n     return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider, useGlobalContext };\r\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;;AAEA,MAAMC,OAAO,GAAI,iFAAjB;AACA,MAAMC,UAAU,gBAAGJ,KAAK,CAACK,aAAN,EAAnB,C,CACA;;AACA,MAAMC,WAAW,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACjC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,IAAD,CAA1C;;EACA,MAAMC,SAAS,GAAG,MAAOC,GAAP,IAAe;IAC5B,IAAI;MACC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;MACA,MAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;MACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;IACJ,CAJD,CAIE,OAAOI,KAAP,EAAc;MACXF,OAAO,CAACC,GAAR,CAAYC,KAAZ;IACJ;EACL,CARD;;EASAjB,SAAS,CAAC,MAAM;IACXS,SAAS,CAACR,OAAD,CAAT;EACJ,CAFQ,EAEN,EAFM,CAAT;EAIA,oBAAO,QAAC,UAAD,CAAY,QAAZ;IAAqB,KAAK,EAAC,OAA3B;IAAA,UAAoCI;EAApC;IAAA;IAAA;IAAA;EAAA,QAAP;AACJ,CAhBD,C,CAkBA;;;GAlBMD,W;;KAAAA,W;;AAmBN,MAAMc,gBAAgB,GAAG,MAAM;EAAA;;EAC1B,OAAOnB,UAAU,CAACG,UAAD,CAAjB;AACJ,CAFD;;IAAMgB,gB;;AAIN,SAAShB,UAAT,EAAqBE,WAArB,EAAkCc,gBAAlC"},"metadata":{},"sourceType":"module"}