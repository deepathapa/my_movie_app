{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movieapp\\\\moviewebsite\\\\src\\\\Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { FaStar } from \"react-icons/fa\";\nimport { NavLink } from \"react-router-dom\";\nimport { useGlobalContext } from \"./context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const {\n    movie,\n    setMovie\n  } = useGlobalContext();\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0); // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n\n  const [itemOffset, setItemOffset] = useState(0);\n  useEffect(() => {\n    // Fetch items from another resources.\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    setCurrentItems(items.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(items.length / itemsPerPage));\n  }, [itemOffset, itemsPerPage]); // Invoke when user click to request another page.\n\n  const handlePageClick = event => {\n    const newOffset = event.selected * itemsPerPage % items.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Items, {\n      currentItems: currentItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      breakLabel: \"...\",\n      nextLabel: \"next >\",\n      onPageChange: handlePageClick,\n      pageRangeDisplayed: 5,\n      pageCount: pageCount,\n      previousLabel: \"< previous\",\n      renderOnZeroPageCount: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"movie-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"tranding_title\",\n      children: \"Trending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container grid grid-4-col\",\n      children: movie.map(curMovie => {\n        var {\n          id,\n          title,\n          poster_path\n        } = curMovie;\n        const movieName = title.substring(0, 15);\n        return /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `movie/${id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://image.tmdb.org/t/p/w500//${poster_path}`,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card_title\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: movieName.length >= 15 ? `${movieName} ...` : movieName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 56\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating\",\n                    children: [/*#__PURE__*/_jsxDEV(FaStar, {\n                      className: \"star\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 61\n                    }, this), \"4.6/5\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 56\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 51\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 36\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 31\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Movies, \"i3S1VhQc/eisowyIOCE/NUgjy88=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useEffect","useState","FaStar","NavLink","useGlobalContext","Movies","movie","setMovie","currentItems","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","itemsPerPage","console","log","items","slice","Math","ceil","length","handlePageClick","event","newOffset","selected","map","curMovie","id","title","poster_path","movieName","substring"],"sources":["D:/Movieapp/moviewebsite/src/Movies.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { FaStar } from \"react-icons/fa\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useGlobalContext } from \"./context\";\r\nconst Movies = () => {\r\n     const { movie, setMovie } = useGlobalContext();\r\n\r\n     const [currentItems, setCurrentItems] = useState(null);\r\n     const [pageCount, setPageCount] = useState(0);\r\n     // Here we use item offsets; we could also use page offsets\r\n     // following the API or data you're working with.\r\n     const [itemOffset, setItemOffset] = useState(0);\r\n\r\n     useEffect(() => {\r\n          // Fetch items from another resources.\r\n          const endOffset = itemOffset + itemsPerPage;\r\n          console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n          setCurrentItems(items.slice(itemOffset, endOffset));\r\n          setPageCount(Math.ceil(items.length / itemsPerPage));\r\n     }, [itemOffset, itemsPerPage]);\r\n\r\n     // Invoke when user click to request another page.\r\n     const handlePageClick = (event) => {\r\n          const newOffset = (event.selected * itemsPerPage) % items.length;\r\n          console.log(\r\n               `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n          );\r\n          setItemOffset(newOffset);\r\n     };\r\n\r\n     return (\r\n          <>\r\n               <Items currentItems={currentItems} />\r\n               <ReactPaginate\r\n                    breakLabel='...'\r\n                    nextLabel='next >'\r\n                    onPageChange={handlePageClick}\r\n                    pageRangeDisplayed={5}\r\n                    pageCount={pageCount}\r\n                    previousLabel='< previous'\r\n                    renderOnZeroPageCount={null}\r\n               />\r\n          </>\r\n     );\r\n     return (\r\n          <section className='movie-page'>\r\n               <h3 className='tranding_title'>Trending</h3>\r\n               <div className='container grid grid-4-col'>\r\n                    {movie.map((curMovie) => {\r\n                         var { id, title, poster_path } = curMovie;\r\n\r\n                         const movieName = title.substring(0, 15);\r\n                         return (\r\n                              <NavLink to={`movie/${id}`} key={id}>\r\n                                   <div className='card'>\r\n                                        <div className='card-info'>\r\n                                             <img\r\n                                                  src={`https://image.tmdb.org/t/p/w500//${poster_path}`}\r\n                                                  alt=''\r\n                                             />\r\n                                             <div className='card_title'>\r\n                                                  <div>\r\n                                                       <h5>\r\n                                                            {movieName.length >=\r\n                                                            15\r\n                                                                 ? `${movieName} ...`\r\n                                                                 : movieName}\r\n                                                       </h5>\r\n                                                       <span className='rating'>\r\n                                                            <FaStar className='star' />\r\n                                                            4.6/5\r\n                                                       </span>\r\n                                                  </div>\r\n                                             </div>\r\n                                        </div>\r\n                                   </div>\r\n                              </NavLink>\r\n                         );\r\n                    })}\r\n               </div>\r\n\r\n               {/* pagenation */}\r\n          </section>\r\n     );\r\n};\r\n\r\nexport default Movies;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}